services:
  db:
    image: postgres:16.1-alpine
    container_name: cryptic-db
    volumes:
      #- ./.dev/ssl/localhost.key:/var/lib/postgresql/localhost.key
      #- ./.dev/ssl/localhost.crt:/var/lib/postgresql/localhost.crt
      - cryptic-db:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=cryptic
    ports: 
      - 5432:5432
    #command: postgres -c ssl=on -c ssl_cert_file=/var/lib/postgresql/localhost.crt -c ssl_key_file=/var/lib/postgresql/localhost.key
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
      interval: 10s
      timeout: 3s
      retries: 5
    profiles:
      - app
      - ""
      
  server:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: cryptic-web
    volumes:
      - ./.dev/ssl/localhost.pfx:/https/localhost.pfx
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5000
      - ASPNETCORE_HTTPS_PORTS=5001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - ConnectionStrings__Database=Server=db;Port=5432;Database=cryptic;User Id=postgres;Password=password
    ports:
      - 5000:5000
      - 5001:5001
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - app

volumes:
  cryptic-db:
